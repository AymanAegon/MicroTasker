{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/user/route.ts"],"sourcesContent":["\nimport { NextResponse } from \"next/server\";\nimport { db } from \"@/app/api/auth\";\n\nexport async function GET(request: Request) {\n  console.log(\"GET\")\n  const { searchParams } = new URL(request.url);\n  const uid = searchParams.get('uid');\n  console.log(\"uid\", uid)\n  if (!uid) {\n    return new Response('Missing uid', { status: 400 });\n  }\n  try {\n    //const userDoc = await db.collection('users').doc(uid).get();\n\n    //if (!userDoc.exists) {\n      //return new NextResponse('User not found', { status: 404 });\n    //}\n\n    //const userData = userDoc.data();\n\n    //return NextResponse.json({ uid: userDoc.id, ...userData });\n    return NextResponse.json({ uid: uid, fullName: \"John Doe\" });\n  } catch (error) {\n    console.error(\"Error fetching user:\", error);\n    return new NextResponse('Error fetching user', { status: 500 });\n  }\n}\n\n"],"names":[],"mappings":";;;AACA;;AAGO,eAAe,IAAI,OAAgB;IACxC,QAAQ,GAAG,CAAC;IACZ,MAAM,EAAE,YAAY,EAAE,GAAG,IAAI,IAAI,QAAQ,GAAG;IAC5C,MAAM,MAAM,aAAa,GAAG,CAAC;IAC7B,QAAQ,GAAG,CAAC,OAAO;IACnB,IAAI,CAAC,KAAK;QACR,OAAO,IAAI,SAAS,eAAe;YAAE,QAAQ;QAAI;IACnD;IACA,IAAI;QACF,8DAA8D;QAE9D,wBAAwB;QACtB,6DAA6D;QAC/D,GAAG;QAEH,kCAAkC;QAElC,6DAA6D;QAC7D,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,KAAK;YAAK,UAAU;QAAW;IAC5D,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,wBAAwB;QACtC,OAAO,IAAI,gIAAA,CAAA,eAAY,CAAC,uBAAuB;YAAE,QAAQ;QAAI;IAC/D;AACF","debugId":null}}]
}