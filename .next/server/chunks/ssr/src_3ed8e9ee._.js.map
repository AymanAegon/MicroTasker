{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,OAAO;QAAa,GAAG,KAAK;;;;;;AAE3D,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ProfileDetails.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { useState, Fragment } from \"react\";\nimport { ArrowLeft, Trash2, Edit } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { User } from \"firebase/auth\";\ninterface UserAttr {\n  fullName: string;\n  role: string;\n};\n\ntype Task = {\n  id: string;\n  title: string;\n  description: string;\n  location: string;\n  budget: number;\n  category: string;\n  userId: string;\n}\n\ntype ProfileType = User & UserAttr & { tasks: Task[] };\ninterface Profile {\n  profile: ProfileType;\n}\n\nconst ProfileDetails = ({ profile }: Profile) => {\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  return (\n    <div key={refreshKey} className=\"flex flex-col justify-center items-center py-10 bg-secondary gap-4 w-full min-h-screen\">\n      <div className=\"w-full max-w-2xl px-4\">\n        <Link href=\"/\" className=\"flex items-center text-blue-500 hover:underline mb-4\">\n          <ArrowLeft className=\"mr-2 h-4 w-4\" />\n          Back\n        </Link>\n        <Card className=\"w-full\">\n          <CardHeader className=\"p-6 pb-0\">\n            <CardTitle>\n              <span className=\"text-3xl font-bold\">\n                {profile.fullName}\n              </span>\n              <span className=\"text-lg text-gray-600\">\n                {profile.role === \"taskPoster\" ? \"  (Task Poster)\" : \"  (Tasker)\"}\n              </span>\n            </CardTitle>\n          </CardHeader>\n          <CardContent className=\"p-6 pt-2 space-y-4\">\n            <div className=\"grid gap-2\">\n              Total tasks: {profile.tasks.length}\n            </div>\n          </CardContent>\n        </Card>        \n      </div>\n    </div>\n    \n  );\n};\n\nexport default ProfileDetails;\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AALA;;;;;;AA2BA,MAAM,iBAAiB,CAAC,EAAE,OAAO,EAAW;IAC1C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE7C,qBACE,8OAAC;QAAqB,WAAU;kBAC9B,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,4JAAA,CAAA,UAAI;oBAAC,MAAK;oBAAI,WAAU;;sCACvB,8OAAC,gNAAA,CAAA,YAAS;4BAAC,WAAU;;;;;;wBAAiB;;;;;;;8BAGxC,8OAAC,gIAAA,CAAA,OAAI;oBAAC,WAAU;;sCACd,8OAAC,gIAAA,CAAA,aAAU;4BAAC,WAAU;sCACpB,cAAA,8OAAC,gIAAA,CAAA,YAAS;;kDACR,8OAAC;wCAAK,WAAU;kDACb,QAAQ,QAAQ;;;;;;kDAEnB,8OAAC;wCAAK,WAAU;kDACb,QAAQ,IAAI,KAAK,eAAe,oBAAoB;;;;;;;;;;;;;;;;;sCAI3D,8OAAC,gIAAA,CAAA,cAAW;4BAAC,WAAU;sCACrB,cAAA,8OAAC;gCAAI,WAAU;;oCAAa;oCACZ,QAAQ,KAAK,CAAC,MAAM;;;;;;;;;;;;;;;;;;;;;;;;OAnBlC;;;;;AA2Bd;uCAEe","debugId":null}},
    {"offset": {"line": 204, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/profile/%5Buid%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport ProfileDetails from '@/components/ProfileDetails';\nimport { useParams } from 'next/navigation';    \nimport { useAuth, useFirebase } from '@/components/Auth/AuthProvider';\nimport { useEffect, useState } from 'react';\nimport { getFirestore, doc, getDoc, collection, getDocs } from 'firebase/firestore';\nimport { User } from \"firebase/auth\";\nimport { useRouter } from \"next/navigation\";\n\ntype Task = {\n  id: string;\n  title: string;\n  description: string;\n  location: string;\n  budget: number;\n  category: string;\n  userId: string;\n}\n\ninterface UserAttr {\n  fullName: string;\n  role: string;\n  tasks: Task[];\n};\n\ntype Profile = User & UserAttr;\n\nconst ProfileDetailPage = () => {\n  const router = useRouter();\n  const { uid: profileId } = useParams<{ uid: string }>();\n  const { user } = useAuth();\n  const { firestorePromises } = useAuth();\n  const { app } = useFirebase();\n  const [profile, setProfile] = useState<Profile | null>(null);\n  // console.log(profileId)\n  useEffect(() => {\n    const fetchTask = async () => {\n      if (!profileId || !app) {\n        router.push(\"/\");\n        return;\n      }\n\n      if (profileId === user?.uid) {\n        router.push(\"/profile\");\n        return;\n      }\n      const { getFirestore } = await firestorePromises;\n      const db = getFirestore(app);\n      const profileDoc = doc(db, 'users', profileId as string);\n      const profileSnap = await getDoc(profileDoc);\n\n      let tasks = [] as Task[];\n      const tasksCollection = collection(db, \"tasks\");\n      const tasksSnapshot = await getDocs(tasksCollection);\n      tasksSnapshot.forEach((doc) => {\n        if (doc.data().userId === profileId) {\n          tasks.push({ id: doc.id, ...doc.data() } as Task);\n        }\n      });\n      // console.log(tasks);\n      if (profileSnap.exists()) {\n        setProfile({ uid: profileSnap.id ?? '', ...profileSnap.data(), tasks: tasks } as Profile);\n      }\n    };\n    fetchTask();\n  }, [profileId, app, firestorePromises]);\n  return (\n    <div>\n      {profile && profile.uid ? <ProfileDetails profile={profile} /> : <p>Task not found</p>}\n    </div>\n  );\n};\n\nexport default ProfileDetailPage;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AAAA;AANA;;;;;;;;AA4BA,MAAM,oBAAoB;IACxB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,EAAE,KAAK,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACnC,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD;IACvB,MAAM,EAAE,iBAAiB,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,UAAO,AAAD;IACpC,MAAM,EAAE,GAAG,EAAE,GAAG,CAAA,GAAA,0IAAA,CAAA,cAAW,AAAD;IAC1B,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAkB;IACvD,yBAAyB;IACzB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,YAAY;YAChB,IAAI,CAAC,aAAa,CAAC,KAAK;gBACtB,OAAO,IAAI,CAAC;gBACZ;YACF;YAEA,IAAI,cAAc,MAAM,KAAK;gBAC3B,OAAO,IAAI,CAAC;gBACZ;YACF;YACA,MAAM,EAAE,YAAY,EAAE,GAAG,MAAM;YAC/B,MAAM,KAAK,aAAa;YACxB,MAAM,aAAa,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,IAAI,SAAS;YACpC,MAAM,cAAc,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;YAEjC,IAAI,QAAQ,EAAE;YACd,MAAM,kBAAkB,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,IAAI;YACvC,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;YACpC,cAAc,OAAO,CAAC,CAAC;gBACrB,IAAI,IAAI,IAAI,GAAG,MAAM,KAAK,WAAW;oBACnC,MAAM,IAAI,CAAC;wBAAE,IAAI,IAAI,EAAE;wBAAE,GAAG,IAAI,IAAI,EAAE;oBAAC;gBACzC;YACF;YACA,sBAAsB;YACtB,IAAI,YAAY,MAAM,IAAI;gBACxB,WAAW;oBAAE,KAAK,YAAY,EAAE,IAAI;oBAAI,GAAG,YAAY,IAAI,EAAE;oBAAE,OAAO;gBAAM;YAC9E;QACF;QACA;IACF,GAAG;QAAC;QAAW;QAAK;KAAkB;IACtC,qBACE,8OAAC;kBACE,WAAW,QAAQ,GAAG,iBAAG,8OAAC,oIAAA,CAAA,UAAc;YAAC,SAAS;;;;;iCAAc,8OAAC;sBAAE;;;;;;;;;;;AAG1E;uCAEe","debugId":null}}]
}